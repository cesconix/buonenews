---
import Article from "../components/article.astro";
import * as utils from "../utils";

// Fetch all Publications from DatoCMS
const publications = await utils.fetchPublications();

// Extract all Articles from Publication XMLs and group them by Organization
const allArticles = await utils.extractArticles(publications);
const grouped = utils.groupBy(allArticles, "organization");

// For each Organization contact the OpenAI API to evaluate the Articles
const promises = Object.entries(grouped).map(
  async ([organization, articles]) => {
    console.log(`Evaluating ${organization}...`);
    return await utils.evaluateArticles(articles.slice(0, 5));
  },
);

const evaluated = await Promise.all(promises).then((data) => data.flat());
---
<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="description" content="Buone News!" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Lora:ital,wght@0,400..700;1,400..700&display=swap" rel="stylesheet">
    <title>buone.news</title>
  </head>
  <body>
    <div class="container mx-auto my-4">
      <div class="grid grid-cols-1">
        {evaluated.map((data) => (
          <div class="border-b last:border-b-0 border-b-slate-300">
            <Article 
              link={data.article.link}
              organization={data.article.organization} 
              datetime={data.article.formattedDateTime} 
              title={data.article.title} 
              sentiment={data.sentiment} 
              comment={data.comment}
            />
          </div>
        ))}
      </div>
    </div>
	</body>
</html>

